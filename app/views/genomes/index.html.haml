.main-container
  #search-methods-container
    %ul#search-methods-selector
      %li= link_to 'Facet', root_path
      %li.current Sequence
      %li= link_to 'ID converter', converter_path
      %li= link_to 'ID resolver', resolver_path
      //%li= link_to 'Text', text_index_path
      %li.search-methods-visibility-button Hide

    #methods
      .method-container#sequence-container
        .inner
          = form_tag(search_genomes_path, method: :get, class: 'form-search') do
            = search_field_tag 'sequence', params[:sequence], class: 'input-xlarge'
            = button_tag 'Search', class: 'tg-button'
          .small-note
            %p Search genomic sequences by an arbitrary sub-string of any DNA sequence fragments (e.g., "TGGAATTGTGAGCGGATAACAATT" for <i>lac</i> operator reported by <a href="http://www.ncbi.nlm.nih.gov/pubmed/4587255" target="_blank">Gilbert W and Maxam A, 1973</a>)


  #genomes.row-fluid
    - if @error
      .alert.alert-error
        = @error
    - unless @genomes.blank?
      %table.table.table-striped.table-bordered.table-hover.table-condensed
        %thead
          %tr
            %th Sequence name
            %th Locus tag
            %th Product
            %th Sequence ontology
            %th Position begin
            %th Position end
            %th Sequence
        %tbody
          - @genomes.each do |genome|
            %tr
              %td= genome[:name]
              %td= link_to genome[:locus_tag], gene_path("#{genome[:taxonomy]}:#{genome[:locus_tag]}"), target: '_blank' if genome[:locus_tag]
              %td= genome[:product] if genome[:product]
              %td= link_to genome[:sequence_ontology_name], genome[:sequence_ontology], target: '_blank' if genome[:sequence_ontology_name]
              %td.numeric= number_with_delimiter(genome[:position])
              %td.numeric= number_with_delimiter(genome[:position_end])
              %td= match_snippet(genome[:snippet], genome[:snippet_pos], genome[:position], genome[:position_end])
